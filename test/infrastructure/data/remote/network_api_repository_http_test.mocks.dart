// Mocks generated by Mockito 5.4.4 from annotations
// in app_cat/test/infrastructure/data/remote/network_api_repository_http_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:app_cat/infrastructure/data/remote/error/network_error_http.dart'
    as _i5;
import 'package:app_cat/infrastructure/data/remote/network_api_repository_http.dart'
    as _i2;
import 'package:either_dart/either.dart' as _i4;
import 'package:http/http.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NetworkApiRepositoryHttp].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkApiRepositoryHttp extends _i1.Mock
    implements _i2.NetworkApiRepositoryHttp {
  MockNetworkApiRepositoryHttp() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Either<_i5.NetworkErrorHttp, dynamic>> getResponseApi(
    String? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getResponseApi,
          [url],
          {#headers: headers},
        ),
        returnValue:
            _i3.Future<_i4.Either<_i5.NetworkErrorHttp, dynamic>>.value(
                _i6.dummyValue<_i4.Either<_i5.NetworkErrorHttp, dynamic>>(
          this,
          Invocation.method(
            #getResponseApi,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.NetworkErrorHttp, dynamic>>);

  @override
  _i4.Either<_i5.NetworkErrorHttp, dynamic> returnResponse(
    _i7.Response? response,
    bool? isJson,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #returnResponse,
          [
            response,
            isJson,
          ],
        ),
        returnValue: _i6.dummyValue<_i4.Either<_i5.NetworkErrorHttp, dynamic>>(
          this,
          Invocation.method(
            #returnResponse,
            [
              response,
              isJson,
            ],
          ),
        ),
      ) as _i4.Either<_i5.NetworkErrorHttp, dynamic>);
}
